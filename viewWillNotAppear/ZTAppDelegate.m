//
//  ZTAppDelegate.m
//  viewWillNotAppear
//
//  Created by Billy Gray on 11/28/11.
//  Copyright (c) 2011 Zetetic LLC. All rights reserved.
//

#import "ZTAppDelegate.h"

#import "ZTFirstViewController.h"

#import "ZTSecondViewController.h"

#import <QuartzCore/CATransaction.h>

@interface ZTAppDelegate (Private)
- (void)_showAppView:(BOOL)animated;
- (void)_hideAppView:(BOOL)animated;
@end

@implementation ZTAppDelegate

@synthesize window = _window;
@synthesize tabBarController = _tabBarController;
@synthesize loginViewController = _loginViewController;
@synthesize isLoginViewShowing = _isLoginViewShowing;

- (id)init
{
	if (self = [super init])
	{
		_isLoginViewShowing = NO;
	}
	return self;
}

- (void)dealloc
{
    [_window release];
    [_tabBarController release];
    [_loginViewController release];
    [super dealloc];
}

- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions
{
    //// Auto-generated by Xcode 4.2's tabbed application template:
    self.window = [[[UIWindow alloc] initWithFrame:[[UIScreen mainScreen] bounds]] autorelease];
    // Override point for customization after application launch.
    UIViewController *viewController1 = [[[ZTFirstViewController alloc] initWithNibName:@"ZTFirstViewController" bundle:nil] autorelease];
    UIViewController *viewController2 = [[[ZTSecondViewController alloc] initWithNibName:@"ZTSecondViewController" bundle:nil] autorelease];
    self.tabBarController = [[[UITabBarController alloc] init] autorelease];
    self.tabBarController.viewControllers = [NSArray arrayWithObjects:viewController1, viewController2, nil];
    self.tabBarController.delegate = self;
    
    // initialize our login controller which will hide the tabBarController
    self.loginViewController = [[[ZTLoginViewController alloc] initWithNibName:@"ZTLoginViewController" bundle:nil] autorelease];
    // make sure we get messages about login status
    self.loginViewController.delegate = self;
    
    // make tab bar controller root, make window key, but don't show it yet
    self.window.rootViewController = self.tabBarController;
    
    [self.window makeKeyAndVisible];
    
    self.tabBarController.view.hidden = YES;
    
    return YES;
}

- (void)applicationWillResignActive:(UIApplication *)application
{
    /*
     Sent when the application is about to move from active to inactive state. This can occur for certain types of temporary interruptions (such as an incoming phone call or SMS message) or when the user quits the application and it begins the transition to the background state.
     Use this method to pause ongoing tasks, disable timers, and throttle down OpenGL ES frame rates. Games should use this method to pause the game.
     */
    self.tabBarController.view.hidden = YES;
}

- (void)applicationDidEnterBackground:(UIApplication *)application
{
    /*
     Use this method to release shared resources, save user data, invalidate timers, and store enough application state information to restore your application to its current state in case it is terminated later. 
     If your application supports background execution, this method is called instead of applicationWillTerminate: when the user quits.
     */
}

- (void)applicationWillEnterForeground:(UIApplication *)application
{
    /*
     Called as part of the transition from the background to the inactive state; here you can undo many of the changes made on entering the background.
     */
}

- (void)applicationDidBecomeActive:(UIApplication *)application
{
    /*
     Restart any tasks that were paused (or not yet started) while the application was inactive. If the application was previously in the background, optionally refresh the user interface.
     */
    if (! _isLoginViewShowing)
        [self _hideAppView:NO];
}

- (void)applicationWillTerminate:(UIApplication *)application
{
    /*
     Called when the application is about to terminate.
     Save data if appropriate.
     See also applicationDidEnterBackground:.
     */
}

- (void)_showAppView:(BOOL)animated
{
    //[[self tabBarController] dismissModalViewControllerAnimated: animated];
    [[self tabBarController] dismissViewControllerAnimated: animated completion:NULL];
    self.tabBarController.view.hidden = NO;
    self.isLoginViewShowing = NO;
}

- (void)_hideAppView:(BOOL)animated
{
    NSLog(@"hiding the app view and presenting the login view...");
    // [[self tabBarController] presentModalViewController: self.loginViewController animated:animated];
    [[self tabBarController] presentViewController: self.loginViewController 
                                          animated:animated 
                                        completion:NULL];
    self.isLoginViewShowing = YES;
}

#pragma mark - ZTLoginViewControllerDelegate

- (void)loginViewControllerGrantedAccess:(ZTLoginViewController *)controller
{
    [self _showAppView:YES];
}

//// Optional UITabBarControllerDelegate method.
//- (void)tabBarController:(UITabBarController *)tabBarController didSelectViewController:(UIViewController *)viewController
//{
//    NSLog(@"delegate message, calling controller's viewWill/DidAppear methods...");
//    [viewController viewWillAppear:NO];
//    [viewController viewDidAppear:NO];
//}

/*
// Optional UITabBarControllerDelegate method.
- (void)tabBarController:(UITabBarController *)tabBarController didEndCustomizingViewControllers:(NSArray *)viewControllers changed:(BOOL)changed
{
}
*/

@end
